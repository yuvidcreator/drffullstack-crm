# Generated by Django 3.2.9 on 2022-10-02 11:35

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('pkid', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Username')),
                ('mobile', models.CharField(blank=True, max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '9999999999'. Up to 10 digits allowed.", regex='^\\d{9,10}$')], verbose_name='Mobile No')),
                ('full_name', models.CharField(blank=True, max_length=50, verbose_name='Full Name')),
                ('first_name', models.CharField(blank=True, max_length=64, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=64, verbose_name='Last Name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Registered On')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Last Updated On')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False, verbose_name='Is Employee')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Is Customer')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
    ]
